<?xml version="1.0" encoding="UTF-8" ?>
<ruleset
	name="Apex Security"
	xmlns="http://pmd.sourceforge.net/ruleset/2.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 https://pmd.sourceforge.io/ruleset_2_0_0.xsd">
   <description>Security Rules for Apex</description>

   <rule
		ref="category/apex/security.xml/ApexSharingViolations"
		message="Apex classes should declare a sharing model if DML or SOQL is used">
      <priority>3</priority>
   </rule>
   <rule
		ref="category/apex/security.xml/ApexInsecureEndpoint"
		message="Apex callouts should use encrypted communication channels">
      <priority>3</priority>
   </rule>

   <rule
		ref="category/apex/security.xml/ApexOpenRedirect"
		message="Apex classes should safely redirect to a known location">
      <priority>3</priority>
   </rule>
   <rule
		ref="category/apex/security.xml/ApexSOQLInjection"
		message="Apex classes should escape variables merged in DML query">
      <priority>3</priority>
   </rule>
   <rule
		ref="category/apex/security.xml/ApexXSSFromURLParam"
		message="Apex classes should escape Strings obtained from URL parameters">
      <priority>3</priority>
   </rule>
   <rule ref="category/apex/security.xml/ApexXSSFromEscapeFalse" message="Apex classes should escape addError strings">
      <priority>3</priority>
   </rule>
   <rule ref="category/apex/security.xml/ApexBadCrypto" message="Apex Crypto should use random IV/key">
      <priority>3</priority>
   </rule>
  <rule ref="category/apex/security.xml/ApexCRUDViolation" message="Validate CRUD permission before SOQL/DML operation">
      <priority>3</priority>
   </rule>
   <rule ref="category/apex/security.xml/ApexDangerousMethods" message="Calling potentially dangerous method">
      <priority>3</priority>
   </rule>
   <rule
		ref="category/apex/security.xml/ApexSuggestUsingNamedCred"
		message="Consider using named credentials for authenticated callouts">
      <priority>3</priority>
   </rule>
   <rule
		ref="category/apex/performance.xml/OperationWithLimitsInLoop"
		message="Avoid operations in loops that may hit governor limits">
	<priority>2</priority>
</rule>
<!-- ERROR PRONE -->
	<!-- <rule ref="category/apex/errorprone.xml/OverrideBothEqualsAndHashcode" /> -->
	<rule
		ref="category/apex/errorprone.xml/AvoidDirectAccessTriggerMap"
		message="Avoid directly accessing Trigger.old and Trigger.new">
		<priority>4</priority>
	</rule>
	<!-- <rule ref="category/apex/errorprone.xml/AvoidDirectAccessTriggerMap" message="Avoid directly
	accessing Trigger.old and Trigger.new"></rule> -->
	<rule ref="category/apex/errorprone.xml/AvoidHardcodingId" message="Avoid hardcoding ID's">
		<priority>2</priority>
	</rule>
	<rule ref="category/apex/errorprone.xml/AvoidNonExistentAnnotations">
		<priority>1</priority>
	</rule>
	<rule
		ref="category/apex/errorprone.xml/MethodWithSameNameAsEnclosingClass"
		message="Classes should not have non-constructor methods with the same name as the class">
		<priority>1</priority>
	</rule>
	<rule ref="category/apex/errorprone.xml/TestMethodsMustBeInTestClasses">
		<priority>2</priority>
	</rule>

	<!-- ERROR PRONE : EMPTY -->
	<rule ref="category/apex/errorprone.xml/EmptyCatchBlock" message="Avoid empty catch blocks">
		<priority>2</priority>
	</rule>
	<rule ref="category/apex/errorprone.xml/EmptyIfStmt" message="Avoid empty 'if' statements">
		<priority>1</priority>
	</rule>
	<rule ref="category/apex/errorprone.xml/EmptyStatementBlock" message="Avoid empty block statements.">
		<priority>2</priority>
	</rule>
	<rule ref="category/apex/errorprone.xml/EmptyTryOrFinallyBlock" message="Avoid empty try or finally blocks">
		<priority>1</priority>
	</rule>
	<rule ref="category/apex/errorprone.xml/EmptyWhileStmt" message="Avoid empty 'while' statements">
		<priority>1</priority>
	</rule>
   <!-- TESTING -->
   <rule
		ref="category/apex/bestpractices.xml/ApexUnitTestClassShouldHaveAsserts"
		message="Apex unit test classes should have at least one Assert call">
		<priority>3</priority>
	</rule>

	<rule
		ref="category/apex/bestpractices.xml/ApexUnitTestShouldNotUseSeeAllDataTrue"
		message="@isTest(seeAllData=true) should not be used in Apex unit tests because it opens up the existing database data for unexpected modification by tests">
		<priority>2</priority>
	</rule>

	<rule ref="category/apex/bestpractices.xml/ApexUnitTestMethodShouldHaveIsTestAnnotation">
		<priority>1</priority>
	</rule>
	<!-- ERROR_PRONE -->
	<rule ref="category/apex/errorprone.xml/TestMethodsMustBeInTestClasses">
		<priority>3</priority>
	</rule>
	<rule ref="category/apex/errorprone.xml/ApexCSRF">
		<priority>3</priority>
	 </rule>
	 <!-- DOCUMENTATION -->
	<rule
		ref="category/apex/documentation.xml/ApexDoc"
		message="Document classes, methods, and properties that are public or global.">
		<priority>3</priority>
		<properties>
			<property name="reportPrivate" value="false" />
			<property name="reportProtected" value="true" />
			<property name="reportMissingDescription" value="false" />
			<property name="reportProperty" value="true" />
		</properties>
	</rule>
</ruleset>
